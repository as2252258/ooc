<?php
/**
 * Created by PhpStorm.
 * User: whwyy
 * Date: 2018/12/20 0020
 * Time: 15:00
 */

namespace Yoc\cache;

/**
 * Class cache
 * @package App\Libs
 * @see \Redis
 * @method static __construct()
 * @method static __destruct()
 * @method static _prefix($key)
 * @method static _serialize($value)
 * @method static _unserialize($value)
 * @method static append($key, $value)
 * @method static auth($password)
 * @method static bgSave()
 * @method static bgrewriteaof()
 * @method static bitcount($key)
 * @method static bitop($operation, $ret_key, $key, $other_keys)
 * @method static bitpos($key, $bit, $start, $end)
 * @method static blPop($key, $timeout_or_key, $extra_args)
 * @method static brPop($key, $timeout_or_key, $extra_args)
 * @method static brpoplpush($src, $dst, $timeout)
 * @method static bzPopMax($key, $timeout_or_key, $extra_args)
 * @method static bzPopMin($key, $timeout_or_key, $extra_args)
 * @method static clearLastError()
 * @method static client($cmd, $args)
 * @method static close()
 * @method static command($args)
 * @method static config($cmd, $key, $value)
 * @method static connect($host, $port, $timeout, $retry_interval)
 * @method static dbSize()
 * @method static debug($key)
 * @method static decr($key)
 * @method static decrBy($key, $value)
 * @method static delete($key, $other_keys)
 * @method static discard()
 * @method static dump($key)
 * @method static echo($msg)
 * @method static eval($script, $args, $num_keys)
 * @method static evalsha($script_sha, $args, $num_keys)
 * @method static exec()
 * @method static exists($key, $other_keys)
 * @method static expireAt($key, $timestamp)
 * @method static flushAll($async)
 * @method static flushDB($async)
 * @method static geoadd($key, $lng, $lat, $member, $other_triples)
 * @method static geodist($key, $src, $dst, $unit)
 * @method static geohash($key, $member, $other_members)
 * @method static geopos($key, $member, $other_members)
 * @method static georadius($key, $lng, $lan, $radius, $unit, $opts)
 * @method static georadius_ro($key, $lng, $lan, $radius, $unit, $opts)
 * @method static georadiusbymember($key, $member, $radius, $unit, $opts)
 * @method static georadiusbymember_ro($key, $member, $radius, $unit, $opts)
 * @method static get($key)
 * @method static getAuth()
 * @method static getBit($key, $offset)
 * @method static getDBNum()
 * @method static getHost()
 * @method static getKeys($pattern)
 * @method static getLastError()
 * @method static getMode()
 * @method static getMultiple($keys)
 * @method static getOption($option)
 * @method static getPersistentID()
 * @method static getPort()
 * @method static getRange($key, $start, $end)
 * @method static getReadTimeout()
 * @method static getSet($key, $value)
 * @method static getTimeout()
 * @method static hDel($key, $member, $other_members)
 * @method static hExists($key, $member)
 * @method static hGet($key, $member)
 * @method static hGetAll($key)
 * @method static hIncrBy($key, $member, $value)
 * @method static hIncrByFloat($key, $member, $value)
 * @method static hKeys($key)
 * @method static hLen($key)
 * @method static hMget($key, $keys)
 * @method static hMset($key, $pairs)
 * @method static hSet($key, $member, $value)
 * @method static hSetNx($key, $member, $value)
 * @method static hStrLen($key, $member)
 * @method static hVals($key)
 * @method static hscan($str_key, $i_iterator, $str_pattern, $i_count)
 * @method static incr($key)
 * @method static incrBy($key, $value)
 * @method static incrByFloat($key, $value)
 * @method static info($option)
 * @method static isConnected()
 * @method static lGet($key, $index)
 * @method static lGetRange($key, $start, $end)
 * @method static lInsert($key, $position, $pivot, $value)
 * @method static lPop($key)
 * @method static lPush($key, $value)
 * @method static lPushx($key, $value)
 * @method static lRemove($key, $value, $count)
 * @method static lSet($key, $index, $value)
 * @method static lSize($key)
 * @method static lastSave()
 * @method static listTrim($key, $start, $stop)
 * @method static migrate($host, $port, $key, $db, $timeout, $copy, $replace)
 * @method static move($key, $dbindex)
 * @method static mset($pairs)
 * @method static msetnx($pairs)
 * @method static multi($mode)
 * @method static object($field, $key)
 * @method static pconnect($host, $port, $timeout)
 * @method static persist($key)
 * @method static pexpire($key, $timestamp)
 * @method static pexpireAt($key, $timestamp)
 * @method static pfadd($key, $elements)
 * @method static pfcount($key)
 * @method static pfmerge($dstkey, $keys)
 * @method static ping()
 * @method static pipeline()
 * @method static psetex($key, $expire, $value)
 * @method static psubscribe($patterns, $callback)
 * @method static pttl($key)
 * @method static publish($channel, $message)
 * @method static pubsub($cmd, $args)
 * @method static punsubscribe($pattern, $other_patterns)
 * @method static rPop($key)
 * @method static rPush($key, $value)
 * @method static rPushx($key, $value)
 * @method static randomKey()
 * @method static rawcommand($cmd, $args)
 * @method static renameKey($key, $newkey)
 * @method static renameNx($key, $newkey)
 * @method static restore($ttl, $key, $value)
 * @method static role()
 * @method static rpoplpush($src, $dst)
 * @method static sAdd($key, $value)
 * @method static sAddArray($key, $options)
 * @method static sContains($key, $value)
 * @method static sDiff($key, $other_keys)
 * @method static sDiffStore($dst, $key, $other_keys)
 * @method static sInter($key, $other_keys)
 * @method static sInterStore($dst, $key, $other_keys)
 * @method static sMembers($key)
 * @method static sMove($src, $dst, $value)
 * @method static sPop($key)
 * @method static sRandMember($key, $count)
 * @method static sRemove($key, $member, $other_members)
 * @method static sSize($key)
 * @method static sUnion($key, $other_keys)
 * @method static sUnionStore($dst, $key, $other_keys)
 * @method static save()
 * @method static scan($i_iterator, $str_pattern, $i_count)
 * @method static script($cmd, $args)
 * @method static select($dbindex)
 * @method static set($key, $value, $opts)
 * @method static setBit($key, $offset, $value)
 * @method static setOption($option, $value)
 * @method static setRange($key, $offset, $value)
 * @method static setTimeout($key, $timeout)
 * @method static setex($key, $expire, $value)
 * @method static setnx($key, $value)
 * @method static slaveof($host, $port)
 * @method static slowlog($arg, $option)
 * @method static sort($key, $options)
 * @method static sortAsc($key, $pattern, $get, $start, $end, $getList)
 * @method static sortAscAlpha($key, $pattern, $get, $start, $end, $getList)
 * @method static sortDesc($key, $pattern, $get, $start, $end, $getList)
 * @method static sortDescAlpha($key, $pattern, $get, $start, $end, $getList)
 * @method static sscan($str_key, $i_iterator, $str_pattern, $i_count)
 * @method static strlen($key)
 * @method static subscribe($channels, $callback)
 * @method static swapdb($srcdb, $dstdb)
 * @method static time()
 * @method static ttl($key)
 * @method static type($key)
 * @method static unlink($key, $other_keys)
 * @method static unsubscribe($channel, $other_channels)
 * @method static unwatch()
 * @method static wait($numslaves, $timeout)
 * @method static watch($key, $other_keys)
 * @method static xack($str_key, $str_group, $arr_ids)
 * @method static xadd($str_key, $str_id, $arr_fields, $i_maxlen, $boo_approximate)
 * @method static xclaim($str_key, $str_group, $str_consumer, $i_min_idle, $arr_ids, $arr_opts)
 * @method static xdel($str_key, $arr_ids)
 * @method static xgroup($str_operation, $str_key, $str_arg1, $str_arg2, $str_arg3)
 * @method static xinfo($str_cmd, $str_key, $str_group)
 * @method static xlen($key)
 * @method static xpending($str_key, $str_group, $str_start, $str_end, $i_count, $str_consumer)
 * @method static xrange($str_key, $str_start, $str_end, $i_count)
 * @method static xread($arr_streams, $i_count, $i_block)
 * @method static xreadgroup($str_group, $str_consumer, $arr_streams, $i_count, $i_block)
 * @method static xrevrange($str_key, $str_start, $str_end, $i_count)
 * @method static xtrim($str_key, $i_maxlen, $boo_approximate)
 * @method static zAdd($key, $score, $value)
 * @method static zCard($key)
 * @method static zCount($key, $min, $max)
 * @method static zDelete($key, $member, $other_members)
 * @method static zDeleteRangeByRank($key, $start, $end)
 * @method static zDeleteRangeByScore($key, $min, $max)
 * @method static zIncrBy($key, $value, $member)
 * @method static zInter($key, $keys, $weights, $aggregate)
 * @method static zLexCount($key, $min, $max)
 * @method static zRange($key, $start, $end, $scores)
 * @method static zRangeByLex($key, $min, $max, $offset, $limit)
 * @method static zRangeByScore($key, $start, $end, $options)
 * @method static zRank($key, $member)
 * @method static zRemRangeByLex($key, $min, $max)
 * @method static zRevRange($key, $start, $end, $scores)
 * @method static zRevRangeByLex($key, $min, $max, $offset, $limit)
 * @method static zRevRangeByScore($key, $start, $end, $options)
 * @method static zRevRank($key, $member)
 * @method static zScore($key, $member)
 * @method static zUnion($key, $keys, $weights, $aggregate)
 * @method static zscan($str_key, $i_iterator, $str_pattern, $i_count)
 * @method static zPopMax($key)
 * @method static zPopMin($key)
 * @method static del($key, $other_keys)
 * @method static evaluate($script, $args, $num_keys)
 * @method static evaluateSha($script_sha, $args, $num_keys)
 * @method static expire($key, $timeout)
 * @method static keys($pattern)
 * @method static lLen($key)
 * @method static lindex($key, $index)
 * @method static lrange($key, $start, $end)
 * @method static lrem($key, $value, $count)
 * @method static ltrim($key, $start, $stop)
 * @method static mget($keys)
 * @method static open($host, $port, $timeout, $retry_interval)
 * @method static popen($host, $port, $timeout)
 * @method static rename($key, $newkey)
 * @method static sGetMembers($key)
 * @method static scard($key)
 * @method static sendEcho($msg)
 * @method static sismember($key, $value)
 * @method static srem($key, $member, $other_members)
 * @method static substr($key, $start, $end)
 * @method static zRem($key, $member, $other_members)
 * @method static zRemRangeByRank($key, $min, $max)
 * @method static zRemRangeByScore($key, $min, $max)
 * @method static zRemove($key, $member, $other_members)
 * @method static zRemoveRangeByScore($key, $min, $max)
 * @method static zReverseRange($key, $start, $end, $scores)
 * @method static zSize($key)
 * @method static zinterstore($key, $keys, $weights, $aggregate)
 * @method static zunionstore($key, $keys, $weights, $aggregate)
 *
 *
 * @inheritdoc Redis
 * @internal Redis
 */
class Cache
{

	const zRevRange = 'zRevRange';
	const zIncrBy = 'zIncrBy';

	/** @var \Redis */
	private static $link;

	private static function createConnect()
	{
		static::$link = new \Redis();
		static::$link->connect(env('REDIS_HOST', '127.0.0.1'), 6379);
		static::$link->auth(env('REDIS_PASSWORD', 'xl.2005113426'));
		static::$link->_prefix(env('REDIS_PREFIX', 'api:'));
		static::$link->select(env('REDIS_DATABASE', 9));
	}

	/**
	 * @param $name
	 * @param $arguments
	 * @return mixed
	 */
	public static function __callStatic($name, $arguments)
	{
		if (!static::$link instanceof \Redis) {
			static::createConnect();
		}
		if (!static::$link->ping()) {
			static::createConnect();
		}
		return static::$link->$name(...$arguments);
	}
}
